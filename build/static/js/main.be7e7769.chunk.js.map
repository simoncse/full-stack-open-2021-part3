{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Phonebook.js","services/phones.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","onChange","handleFilter","value","filter","PersonForm","newName","handleNameChange","newNumber","handleNumberChange","type","onClick","handleSubmit","Person","person","handleDelete","name","number","id","Phonebook","persons","toLowerCase","includes","map","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","message","style","className","App","useState","setPersons","useEffect","phoneService","setNewName","setNewNumber","setFilter","notifyMessage","setNotifyMessage","notifyStyle","setNotifyStyle","e","target","preventDefault","personToChange","find","personToUpdate","window","confirm","returnedPerson","setTimeout","catch","err","newPerson","concat","newPersons","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be7e7769.chunk.js","sourcesContent":["const Filter = (props) => {\n  return (\n    <div>\n      filter shown with: <input onChange={props.handleFilter} value={props.filter} />\n    </div>\n  );\n};\n\nexport default Filter;","const PersonForm = (props) => {\n    return ( \n    <form>\n        <div>\n        name: <input value = {props.newName} onChange={props.handleNameChange} />\n        </div>\n        <div>\n        number: <input value = {props.newNumber} onChange = {props.handleNumberChange}/>\n        </div>\n        <div>\n        <button type=\"submit\" onClick={props.handleSubmit}>add</button>\n        </div>\n    </form>\n     );\n}\n \nexport default PersonForm;","const Person = ( {person,handleDelete} ) => {\n  return ( \n  <>\n  {person.name} {person.number}{\" \"}\n  <button type=\"submit\" onClick = {()=>handleDelete(person.id, person.name)}> delete</button>\n  </>);\n}\n\n\nconst Phonebook = ({filter,persons, handleDelete}) => {\n    return ( \n    <div>\n        {filter\n        ? persons\n          .filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n          .map(person => ( \n            <div key = {person.name}>\n              < Person person = {person} handleDelete={handleDelete}/>\n            </div>))\n        : persons.map(person => ( \n          <div key = {person.name}>\n            < Person person = {person} handleDelete={handleDelete}/>\n          </div>))\n        }     \n    </div>\n     );\n}\n \nexport default Phonebook;","import axios from 'axios'\n\n// use relative path because it will be in the same directory as the backend\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { \n  getAll, create, remove, update\n}","const Notification = ( {message,style} ) => {\n\n    return(\n    <div className = {style}>{message}</div> )\n\n}\n \nexport default Notification;","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Phonebook from './components/Phonebook'\nimport phoneService from './services/phones'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([]) \n\n  useEffect( ()=> {\n    phoneService.getAll()\n    .then(data =>{\n      setPersons(data)\n    })\n    }, [])\n\n\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [filter, setFilter ] = useState('')\n  const [notifyMessage, setNotifyMessage] = useState('')\n  const [notifyStyle, setNotifyStyle] = useState('')\n\n  const handleNameChange = (e) =>{ \n    setNewName(e.target.value)\n  }\n\n  const handleNumberChange = (e) =>{\n    setNewNumber(e.target.value)\n  }\n\n  \n  const handleFilter = (e) =>{\n    setFilter(e.target.value)\n    \n  }\n\n  const handleDelete = (id, name) =>{\n    window.confirm(`Delete ${name}?`)\n    && phoneService.remove(id)\n    .then(()=>{\n      const newPersons = persons.filter(person => person.id !== id)\n      setPersons(newPersons)\n      setNotifyMessage(`Successfully deleted ${name}`)\n      setNotifyStyle('success')\n      setTimeout(()=>{\n        setNotifyStyle('')\n      },3000)\n      }\n    )\n    .catch(err=>{\n      setNotifyMessage(`Information of ${name} has already been removed from the system`)\n      setNotifyStyle('error')\n    })\n  }\n\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const newObject = {\n      name: newName, \n      number: newNumber}\n\n    const personToChange = persons.find(person => person.name === newName)\n    const personToUpdate = {...personToChange, number: newNumber}\n\n    if (personToChange){\n      window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)\n      && phoneService\n      .update(personToChange.id, personToUpdate)\n      .then(returnedPerson => {\n        setPersons(\n          persons.map(person=>\n            person.id !== personToChange.id ? person : returnedPerson\n          )\n        )\n        setNotifyMessage(`Updated ${returnedPerson.name}`)\n        setNotifyStyle('success')\n        setTimeout(()=> {\n          setNotifyStyle('')\n        },3000)\n\n      })\n      .catch(err =>{\n        setNotifyMessage(`Information of ${newName} has already been removed from the system`)\n        setNotifyStyle('error')\n      })\n      }else{\n        phoneService\n        .create(newObject)\n        .then(newPerson => {\n        setPersons(persons.concat(newPerson))\n        setNotifyMessage(`Added ${newPerson.name}`)\n        setNotifyStyle('success')\n        setTimeout(()=>{\n          setNotifyStyle('')\n        },3000)\n        }\n        )\n        setNewName('')\n        setNewNumber('')\n      }\n  }\n \n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {notifyStyle && <Notification message={notifyMessage} style = {notifyStyle}/>}\n      <Filter handleFilter={handleFilter} filter={filter}/>\n      <div>\n        <h2>add a new</h2>\n        <PersonForm\n          newName = {newName}\n          handleNameChange = {handleNameChange}\n          newNumber = {newNumber}\n          handleNumberChange = {handleNumberChange}\n          handleSubmit = {handleSubmit}         \n        />\n      </div>\n      <div>\n        <h2>Numbers</h2>\n          <Phonebook filter ={filter} persons = {persons} handleDelete={handleDelete}/>\n      </div>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}